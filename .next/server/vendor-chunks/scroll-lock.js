"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/scroll-lock";
exports.ids = ["vendor-chunks/scroll-lock"];
exports.modules = {

/***/ "(ssr)/./node_modules/scroll-lock/dist/scroll-lock.js":
/*!******************************************************!*\
  !*** ./node_modules/scroll-lock/dist/scroll-lock.js ***!
  \******************************************************/
/***/ ((module) => {

eval("\n(function webpackUniversalModuleDefinition(root, factory) {\n    if (true) module.exports = factory();\n    else {}\n})(void 0, function() {\n    return /******/ function(modules) {\n        /******/ // The module cache\n        /******/ var installedModules = {};\n        /******/ /******/ // The require function\n        /******/ function __nested_webpack_require_577__(moduleId) {\n            /******/ /******/ // Check if module is in cache\n            /******/ if (installedModules[moduleId]) {\n                /******/ return installedModules[moduleId].exports;\n            /******/ }\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = installedModules[moduleId] = {\n                /******/ i: moduleId,\n                /******/ l: false,\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ modules[moduleId].call(module1.exports, module1, module1.exports, __nested_webpack_require_577__);\n            /******/ /******/ // Flag the module as loaded\n            /******/ module1.l = true;\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /******/ /******/ // expose the modules object (__webpack_modules__)\n        /******/ __nested_webpack_require_577__.m = modules;\n        /******/ /******/ // expose the module cache\n        /******/ __nested_webpack_require_577__.c = installedModules;\n        /******/ /******/ // define getter function for harmony exports\n        /******/ __nested_webpack_require_577__.d = function(exports1, name, getter) {\n            /******/ if (!__nested_webpack_require_577__.o(exports1, name)) {\n                /******/ Object.defineProperty(exports1, name, {\n                    enumerable: true,\n                    get: getter\n                });\n            /******/ }\n        /******/ };\n        /******/ /******/ // define __esModule on exports\n        /******/ __nested_webpack_require_577__.r = function(exports1) {\n            /******/ if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\n                /******/ Object.defineProperty(exports1, Symbol.toStringTag, {\n                    value: \"Module\"\n                });\n            /******/ }\n            /******/ Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n        /******/ };\n        /******/ /******/ // create a fake namespace object\n        /******/ // mode & 1: value is a module id, require it\n        /******/ // mode & 2: merge all properties of value into the ns\n        /******/ // mode & 4: return value when already ns object\n        /******/ // mode & 8|1: behave like require\n        /******/ __nested_webpack_require_577__.t = function(value, mode) {\n            /******/ if (mode & 1) value = __nested_webpack_require_577__(value);\n            /******/ if (mode & 8) return value;\n            /******/ if (mode & 4 && typeof value === \"object\" && value && value.__esModule) return value;\n            /******/ var ns = Object.create(null);\n            /******/ __nested_webpack_require_577__.r(ns);\n            /******/ Object.defineProperty(ns, \"default\", {\n                enumerable: true,\n                value: value\n            });\n            /******/ if (mode & 2 && typeof value != \"string\") for(var key in value)__nested_webpack_require_577__.d(ns, key, (function(key) {\n                return value[key];\n            }).bind(null, key));\n            /******/ return ns;\n        /******/ };\n        /******/ /******/ // getDefaultExport function for compatibility with non-harmony modules\n        /******/ __nested_webpack_require_577__.n = function(module1) {\n            /******/ var getter = module1 && module1.__esModule ? /******/ function getDefault() {\n                return module1[\"default\"];\n            } : /******/ function getModuleExports() {\n                return module1;\n            };\n            /******/ __nested_webpack_require_577__.d(getter, \"a\", getter);\n            /******/ return getter;\n        /******/ };\n        /******/ /******/ // Object.prototype.hasOwnProperty.call\n        /******/ __nested_webpack_require_577__.o = function(object, property) {\n            return Object.prototype.hasOwnProperty.call(object, property);\n        };\n        /******/ /******/ // __webpack_public_path__\n        /******/ __nested_webpack_require_577__.p = \"\";\n        /******/ /******/ /******/ // Load entry module and return exports\n        /******/ return __nested_webpack_require_577__(__nested_webpack_require_577__.s = 0);\n    /******/ }([\n        /* 0 */ /***/ function(module1, __nested_webpack_exports__, __nested_webpack_require_4802__) {\n            \"use strict\";\n            __nested_webpack_require_4802__.r(__nested_webpack_exports__);\n            // CONCATENATED MODULE: ./src/tools.js\n            var argumentAsArray = function argumentAsArray(argument) {\n                return Array.isArray(argument) ? argument : [\n                    argument\n                ];\n            };\n            var isElement = function isElement(target) {\n                return target instanceof Node;\n            };\n            var isElementList = function isElementList(nodeList) {\n                return nodeList instanceof NodeList;\n            };\n            var eachNode = function eachNode(nodeList, callback) {\n                if (nodeList && callback) {\n                    nodeList = isElementList(nodeList) ? nodeList : [\n                        nodeList\n                    ];\n                    for(var i = 0; i < nodeList.length; i++){\n                        if (callback(nodeList[i], i, nodeList.length) === true) {\n                            break;\n                        }\n                    }\n                }\n            };\n            var throwError = function throwError(message) {\n                return console.error(\"[scroll-lock] \".concat(message));\n            };\n            var arrayAsSelector = function arrayAsSelector(array) {\n                if (Array.isArray(array)) {\n                    var selector = array.join(\", \");\n                    return selector;\n                }\n            };\n            var nodeListAsArray = function nodeListAsArray(nodeList) {\n                var nodes = [];\n                eachNode(nodeList, function(node) {\n                    return nodes.push(node);\n                });\n                return nodes;\n            };\n            var findParentBySelector = function findParentBySelector($el, selector) {\n                var self = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n                var $root = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : document;\n                if (self && nodeListAsArray($root.querySelectorAll(selector)).indexOf($el) !== -1) {\n                    return $el;\n                }\n                while(($el = $el.parentElement) && nodeListAsArray($root.querySelectorAll(selector)).indexOf($el) === -1){\n                    ;\n                }\n                return $el;\n            };\n            var elementHasSelector = function elementHasSelector($el, selector) {\n                var $root = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n                var has = nodeListAsArray($root.querySelectorAll(selector)).indexOf($el) !== -1;\n                return has;\n            };\n            var elementHasOverflowHidden = function elementHasOverflowHidden($el) {\n                if ($el) {\n                    var computedStyle = getComputedStyle($el);\n                    var overflowIsHidden = computedStyle.overflow === \"hidden\";\n                    return overflowIsHidden;\n                }\n            };\n            var elementScrollTopOnStart = function elementScrollTopOnStart($el) {\n                if ($el) {\n                    if (elementHasOverflowHidden($el)) {\n                        return true;\n                    }\n                    var scrollTop = $el.scrollTop;\n                    return scrollTop <= 0;\n                }\n            };\n            var elementScrollTopOnEnd = function elementScrollTopOnEnd($el) {\n                if ($el) {\n                    if (elementHasOverflowHidden($el)) {\n                        return true;\n                    }\n                    var scrollTop = $el.scrollTop;\n                    var scrollHeight = $el.scrollHeight;\n                    var scrollTopWithHeight = scrollTop + $el.offsetHeight;\n                    return scrollTopWithHeight >= scrollHeight;\n                }\n            };\n            var elementScrollLeftOnStart = function elementScrollLeftOnStart($el) {\n                if ($el) {\n                    if (elementHasOverflowHidden($el)) {\n                        return true;\n                    }\n                    var scrollLeft = $el.scrollLeft;\n                    return scrollLeft <= 0;\n                }\n            };\n            var elementScrollLeftOnEnd = function elementScrollLeftOnEnd($el) {\n                if ($el) {\n                    if (elementHasOverflowHidden($el)) {\n                        return true;\n                    }\n                    var scrollLeft = $el.scrollLeft;\n                    var scrollWidth = $el.scrollWidth;\n                    var scrollLeftWithWidth = scrollLeft + $el.offsetWidth;\n                    return scrollLeftWithWidth >= scrollWidth;\n                }\n            };\n            var elementIsScrollableField = function elementIsScrollableField($el) {\n                var selector = 'textarea, [contenteditable=\"true\"]';\n                return elementHasSelector($el, selector);\n            };\n            var elementIsInputRange = function elementIsInputRange($el) {\n                var selector = 'input[type=\"range\"]';\n                return elementHasSelector($el, selector);\n            };\n            // CONCATENATED MODULE: ./src/scroll-lock.js\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"disablePageScroll\", function() {\n                return disablePageScroll;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"enablePageScroll\", function() {\n                return enablePageScroll;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"getScrollState\", function() {\n                return getScrollState;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"clearQueueScrollLocks\", function() {\n                return clearQueueScrollLocks;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"getTargetScrollBarWidth\", function() {\n                return scroll_lock_getTargetScrollBarWidth;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"getCurrentTargetScrollBarWidth\", function() {\n                return scroll_lock_getCurrentTargetScrollBarWidth;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"getPageScrollBarWidth\", function() {\n                return getPageScrollBarWidth;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"getCurrentPageScrollBarWidth\", function() {\n                return getCurrentPageScrollBarWidth;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"addScrollableTarget\", function() {\n                return scroll_lock_addScrollableTarget;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"removeScrollableTarget\", function() {\n                return scroll_lock_removeScrollableTarget;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"addScrollableSelector\", function() {\n                return scroll_lock_addScrollableSelector;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"removeScrollableSelector\", function() {\n                return scroll_lock_removeScrollableSelector;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"addLockableTarget\", function() {\n                return scroll_lock_addLockableTarget;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"addLockableSelector\", function() {\n                return scroll_lock_addLockableSelector;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"setFillGapMethod\", function() {\n                return scroll_lock_setFillGapMethod;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"addFillGapTarget\", function() {\n                return scroll_lock_addFillGapTarget;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"removeFillGapTarget\", function() {\n                return scroll_lock_removeFillGapTarget;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"addFillGapSelector\", function() {\n                return scroll_lock_addFillGapSelector;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"removeFillGapSelector\", function() {\n                return scroll_lock_removeFillGapSelector;\n            });\n            /* harmony export (binding) */ __nested_webpack_require_4802__.d(__nested_webpack_exports__, \"refillGaps\", function() {\n                return refillGaps;\n            });\n            function _objectSpread(target) {\n                for(var i = 1; i < arguments.length; i++){\n                    var source = arguments[i] != null ? arguments[i] : {};\n                    var ownKeys = Object.keys(source);\n                    if (typeof Object.getOwnPropertySymbols === \"function\") {\n                        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                            return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                        }));\n                    }\n                    ownKeys.forEach(function(key) {\n                        _defineProperty(target, key, source[key]);\n                    });\n                }\n                return target;\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            var FILL_GAP_AVAILABLE_METHODS = [\n                \"padding\",\n                \"margin\",\n                \"width\",\n                \"max-width\",\n                \"none\"\n            ];\n            var TOUCH_DIRECTION_DETECT_OFFSET = 3;\n            var state = {\n                scroll: true,\n                queue: 0,\n                scrollableSelectors: [\n                    \"[data-scroll-lock-scrollable]\"\n                ],\n                lockableSelectors: [\n                    \"body\",\n                    \"[data-scroll-lock-lockable]\"\n                ],\n                fillGapSelectors: [\n                    \"body\",\n                    \"[data-scroll-lock-fill-gap]\",\n                    \"[data-scroll-lock-lockable]\"\n                ],\n                fillGapMethod: FILL_GAP_AVAILABLE_METHODS[0],\n                //\n                startTouchY: 0,\n                startTouchX: 0\n            };\n            var disablePageScroll = function disablePageScroll(target) {\n                if (state.queue <= 0) {\n                    state.scroll = false;\n                    scroll_lock_hideLockableOverflow();\n                    fillGaps();\n                }\n                scroll_lock_addScrollableTarget(target);\n                state.queue++;\n            };\n            var enablePageScroll = function enablePageScroll(target) {\n                state.queue > 0 && state.queue--;\n                if (state.queue <= 0) {\n                    state.scroll = true;\n                    scroll_lock_showLockableOverflow();\n                    unfillGaps();\n                }\n                scroll_lock_removeScrollableTarget(target);\n            };\n            var getScrollState = function getScrollState() {\n                return state.scroll;\n            };\n            var clearQueueScrollLocks = function clearQueueScrollLocks() {\n                state.queue = 0;\n            };\n            var scroll_lock_getTargetScrollBarWidth = function getTargetScrollBarWidth($target) {\n                var onlyExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                if (isElement($target)) {\n                    var currentOverflowYProperty = $target.style.overflowY;\n                    if (onlyExists) {\n                        if (!getScrollState()) {\n                            $target.style.overflowY = $target.getAttribute(\"data-scroll-lock-saved-overflow-y-property\");\n                        }\n                    } else {\n                        $target.style.overflowY = \"scroll\";\n                    }\n                    var width = scroll_lock_getCurrentTargetScrollBarWidth($target);\n                    $target.style.overflowY = currentOverflowYProperty;\n                    return width;\n                } else {\n                    return 0;\n                }\n            };\n            var scroll_lock_getCurrentTargetScrollBarWidth = function getCurrentTargetScrollBarWidth($target) {\n                if (isElement($target)) {\n                    if ($target === document.body) {\n                        var documentWidth = document.documentElement.clientWidth;\n                        var windowWidth = window.innerWidth;\n                        var currentWidth = windowWidth - documentWidth;\n                        return currentWidth;\n                    } else {\n                        var borderLeftWidthCurrentProperty = $target.style.borderLeftWidth;\n                        var borderRightWidthCurrentProperty = $target.style.borderRightWidth;\n                        $target.style.borderLeftWidth = \"0px\";\n                        $target.style.borderRightWidth = \"0px\";\n                        var _currentWidth = $target.offsetWidth - $target.clientWidth;\n                        $target.style.borderLeftWidth = borderLeftWidthCurrentProperty;\n                        $target.style.borderRightWidth = borderRightWidthCurrentProperty;\n                        return _currentWidth;\n                    }\n                } else {\n                    return 0;\n                }\n            };\n            var getPageScrollBarWidth = function getPageScrollBarWidth() {\n                var onlyExists = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n                return scroll_lock_getTargetScrollBarWidth(document.body, onlyExists);\n            };\n            var getCurrentPageScrollBarWidth = function getCurrentPageScrollBarWidth() {\n                return scroll_lock_getCurrentTargetScrollBarWidth(document.body);\n            };\n            var scroll_lock_addScrollableTarget = function addScrollableTarget(target) {\n                if (target) {\n                    var targets = argumentAsArray(target);\n                    targets.map(function($targets) {\n                        eachNode($targets, function($target) {\n                            if (isElement($target)) {\n                                $target.setAttribute(\"data-scroll-lock-scrollable\", \"\");\n                            } else {\n                                throwError('\"'.concat($target, '\" is not a Element.'));\n                            }\n                        });\n                    });\n                }\n            };\n            var scroll_lock_removeScrollableTarget = function removeScrollableTarget(target) {\n                if (target) {\n                    var targets = argumentAsArray(target);\n                    targets.map(function($targets) {\n                        eachNode($targets, function($target) {\n                            if (isElement($target)) {\n                                $target.removeAttribute(\"data-scroll-lock-scrollable\");\n                            } else {\n                                throwError('\"'.concat($target, '\" is not a Element.'));\n                            }\n                        });\n                    });\n                }\n            };\n            var scroll_lock_addScrollableSelector = function addScrollableSelector(selector) {\n                if (selector) {\n                    var selectors = argumentAsArray(selector);\n                    selectors.map(function(selector) {\n                        state.scrollableSelectors.push(selector);\n                    });\n                }\n            };\n            var scroll_lock_removeScrollableSelector = function removeScrollableSelector(selector) {\n                if (selector) {\n                    var selectors = argumentAsArray(selector);\n                    selectors.map(function(selector) {\n                        state.scrollableSelectors = state.scrollableSelectors.filter(function(sSelector) {\n                            return sSelector !== selector;\n                        });\n                    });\n                }\n            };\n            var scroll_lock_addLockableTarget = function addLockableTarget(target) {\n                if (target) {\n                    var targets = argumentAsArray(target);\n                    targets.map(function($targets) {\n                        eachNode($targets, function($target) {\n                            if (isElement($target)) {\n                                $target.setAttribute(\"data-scroll-lock-lockable\", \"\");\n                            } else {\n                                throwError('\"'.concat($target, '\" is not a Element.'));\n                            }\n                        });\n                    });\n                    if (!getScrollState()) {\n                        scroll_lock_hideLockableOverflow();\n                    }\n                }\n            };\n            var scroll_lock_addLockableSelector = function addLockableSelector(selector) {\n                if (selector) {\n                    var selectors = argumentAsArray(selector);\n                    selectors.map(function(selector) {\n                        state.lockableSelectors.push(selector);\n                    });\n                    if (!getScrollState()) {\n                        scroll_lock_hideLockableOverflow();\n                    }\n                    scroll_lock_addFillGapSelector(selector);\n                }\n            };\n            var scroll_lock_setFillGapMethod = function setFillGapMethod(method) {\n                if (method) {\n                    if (FILL_GAP_AVAILABLE_METHODS.indexOf(method) !== -1) {\n                        state.fillGapMethod = method;\n                        refillGaps();\n                    } else {\n                        var methods = FILL_GAP_AVAILABLE_METHODS.join(\", \");\n                        throwError('\"'.concat(method, '\" method is not available!\\nAvailable fill gap methods: ').concat(methods, \".\"));\n                    }\n                }\n            };\n            var scroll_lock_addFillGapTarget = function addFillGapTarget(target) {\n                if (target) {\n                    var targets = argumentAsArray(target);\n                    targets.map(function($targets) {\n                        eachNode($targets, function($target) {\n                            if (isElement($target)) {\n                                $target.setAttribute(\"data-scroll-lock-fill-gap\", \"\");\n                                if (!state.scroll) {\n                                    scroll_lock_fillGapTarget($target);\n                                }\n                            } else {\n                                throwError('\"'.concat($target, '\" is not a Element.'));\n                            }\n                        });\n                    });\n                }\n            };\n            var scroll_lock_removeFillGapTarget = function removeFillGapTarget(target) {\n                if (target) {\n                    var targets = argumentAsArray(target);\n                    targets.map(function($targets) {\n                        eachNode($targets, function($target) {\n                            if (isElement($target)) {\n                                $target.removeAttribute(\"data-scroll-lock-fill-gap\");\n                                if (!state.scroll) {\n                                    scroll_lock_unfillGapTarget($target);\n                                }\n                            } else {\n                                throwError('\"'.concat($target, '\" is not a Element.'));\n                            }\n                        });\n                    });\n                }\n            };\n            var scroll_lock_addFillGapSelector = function addFillGapSelector(selector) {\n                if (selector) {\n                    var selectors = argumentAsArray(selector);\n                    selectors.map(function(selector) {\n                        if (state.fillGapSelectors.indexOf(selector) === -1) {\n                            state.fillGapSelectors.push(selector);\n                            if (!state.scroll) {\n                                scroll_lock_fillGapSelector(selector);\n                            }\n                        }\n                    });\n                }\n            };\n            var scroll_lock_removeFillGapSelector = function removeFillGapSelector(selector) {\n                if (selector) {\n                    var selectors = argumentAsArray(selector);\n                    selectors.map(function(selector) {\n                        state.fillGapSelectors = state.fillGapSelectors.filter(function(fSelector) {\n                            return fSelector !== selector;\n                        });\n                        if (!state.scroll) {\n                            scroll_lock_unfillGapSelector(selector);\n                        }\n                    });\n                }\n            };\n            var refillGaps = function refillGaps() {\n                if (!state.scroll) {\n                    fillGaps();\n                }\n            };\n            var scroll_lock_hideLockableOverflow = function hideLockableOverflow() {\n                var selector = arrayAsSelector(state.lockableSelectors);\n                scroll_lock_hideLockableOverflowSelector(selector);\n            };\n            var scroll_lock_showLockableOverflow = function showLockableOverflow() {\n                var selector = arrayAsSelector(state.lockableSelectors);\n                scroll_lock_showLockableOverflowSelector(selector);\n            };\n            var scroll_lock_hideLockableOverflowSelector = function hideLockableOverflowSelector(selector) {\n                var $targets = document.querySelectorAll(selector);\n                eachNode($targets, function($target) {\n                    scroll_lock_hideLockableOverflowTarget($target);\n                });\n            };\n            var scroll_lock_showLockableOverflowSelector = function showLockableOverflowSelector(selector) {\n                var $targets = document.querySelectorAll(selector);\n                eachNode($targets, function($target) {\n                    scroll_lock_showLockableOverflowTarget($target);\n                });\n            };\n            var scroll_lock_hideLockableOverflowTarget = function hideLockableOverflowTarget($target) {\n                if (isElement($target) && $target.getAttribute(\"data-scroll-lock-locked\") !== \"true\") {\n                    var computedStyle = window.getComputedStyle($target);\n                    $target.setAttribute(\"data-scroll-lock-saved-overflow-y-property\", computedStyle.overflowY);\n                    $target.setAttribute(\"data-scroll-lock-saved-inline-overflow-property\", $target.style.overflow);\n                    $target.setAttribute(\"data-scroll-lock-saved-inline-overflow-y-property\", $target.style.overflowY);\n                    $target.style.overflow = \"hidden\";\n                    $target.setAttribute(\"data-scroll-lock-locked\", \"true\");\n                }\n            };\n            var scroll_lock_showLockableOverflowTarget = function showLockableOverflowTarget($target) {\n                if (isElement($target) && $target.getAttribute(\"data-scroll-lock-locked\") === \"true\") {\n                    $target.style.overflow = $target.getAttribute(\"data-scroll-lock-saved-inline-overflow-property\");\n                    $target.style.overflowY = $target.getAttribute(\"data-scroll-lock-saved-inline-overflow-y-property\");\n                    $target.removeAttribute(\"data-scroll-lock-saved-overflow-property\");\n                    $target.removeAttribute(\"data-scroll-lock-saved-inline-overflow-property\");\n                    $target.removeAttribute(\"data-scroll-lock-saved-inline-overflow-y-property\");\n                    $target.removeAttribute(\"data-scroll-lock-locked\");\n                }\n            };\n            var fillGaps = function fillGaps() {\n                state.fillGapSelectors.map(function(selector) {\n                    scroll_lock_fillGapSelector(selector);\n                });\n            };\n            var unfillGaps = function unfillGaps() {\n                state.fillGapSelectors.map(function(selector) {\n                    scroll_lock_unfillGapSelector(selector);\n                });\n            };\n            var scroll_lock_fillGapSelector = function fillGapSelector(selector) {\n                var $targets = document.querySelectorAll(selector);\n                var isLockable = state.lockableSelectors.indexOf(selector) !== -1;\n                eachNode($targets, function($target) {\n                    scroll_lock_fillGapTarget($target, isLockable);\n                });\n            };\n            var scroll_lock_fillGapTarget = function fillGapTarget($target) {\n                var isLockable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                if (isElement($target)) {\n                    var scrollBarWidth;\n                    if ($target.getAttribute(\"data-scroll-lock-lockable\") === \"\" || isLockable) {\n                        scrollBarWidth = scroll_lock_getTargetScrollBarWidth($target, true);\n                    } else {\n                        var $lockableParent = findParentBySelector($target, arrayAsSelector(state.lockableSelectors));\n                        scrollBarWidth = scroll_lock_getTargetScrollBarWidth($lockableParent, true);\n                    }\n                    if ($target.getAttribute(\"data-scroll-lock-filled-gap\") === \"true\") {\n                        scroll_lock_unfillGapTarget($target);\n                    }\n                    var computedStyle = window.getComputedStyle($target);\n                    $target.setAttribute(\"data-scroll-lock-filled-gap\", \"true\");\n                    $target.setAttribute(\"data-scroll-lock-current-fill-gap-method\", state.fillGapMethod);\n                    if (state.fillGapMethod === \"margin\") {\n                        var currentMargin = parseFloat(computedStyle.marginRight);\n                        $target.style.marginRight = \"\".concat(currentMargin + scrollBarWidth, \"px\");\n                    } else if (state.fillGapMethod === \"width\") {\n                        $target.style.width = \"calc(100% - \".concat(scrollBarWidth, \"px)\");\n                    } else if (state.fillGapMethod === \"max-width\") {\n                        $target.style.maxWidth = \"calc(100% - \".concat(scrollBarWidth, \"px)\");\n                    } else if (state.fillGapMethod === \"padding\") {\n                        var currentPadding = parseFloat(computedStyle.paddingRight);\n                        $target.style.paddingRight = \"\".concat(currentPadding + scrollBarWidth, \"px\");\n                    }\n                }\n            };\n            var scroll_lock_unfillGapSelector = function unfillGapSelector(selector) {\n                var $targets = document.querySelectorAll(selector);\n                eachNode($targets, function($target) {\n                    scroll_lock_unfillGapTarget($target);\n                });\n            };\n            var scroll_lock_unfillGapTarget = function unfillGapTarget($target) {\n                if (isElement($target)) {\n                    if ($target.getAttribute(\"data-scroll-lock-filled-gap\") === \"true\") {\n                        var currentFillGapMethod = $target.getAttribute(\"data-scroll-lock-current-fill-gap-method\");\n                        $target.removeAttribute(\"data-scroll-lock-filled-gap\");\n                        $target.removeAttribute(\"data-scroll-lock-current-fill-gap-method\");\n                        if (currentFillGapMethod === \"margin\") {\n                            $target.style.marginRight = \"\";\n                        } else if (currentFillGapMethod === \"width\") {\n                            $target.style.width = \"\";\n                        } else if (currentFillGapMethod === \"max-width\") {\n                            $target.style.maxWidth = \"\";\n                        } else if (currentFillGapMethod === \"padding\") {\n                            $target.style.paddingRight = \"\";\n                        }\n                    }\n                }\n            };\n            var onResize = function onResize(e) {\n                refillGaps();\n            };\n            var onTouchStart = function onTouchStart(e) {\n                if (!state.scroll) {\n                    state.startTouchY = e.touches[0].clientY;\n                    state.startTouchX = e.touches[0].clientX;\n                }\n            };\n            var scroll_lock_onTouchMove = function onTouchMove(e) {\n                if (!state.scroll) {\n                    var startTouchY = state.startTouchY, startTouchX = state.startTouchX;\n                    var currentClientY = e.touches[0].clientY;\n                    var currentClientX = e.touches[0].clientX;\n                    if (e.touches.length < 2) {\n                        var selector = arrayAsSelector(state.scrollableSelectors);\n                        var direction = {\n                            up: startTouchY < currentClientY,\n                            down: startTouchY > currentClientY,\n                            left: startTouchX < currentClientX,\n                            right: startTouchX > currentClientX\n                        };\n                        var directionWithOffset = {\n                            up: startTouchY + TOUCH_DIRECTION_DETECT_OFFSET < currentClientY,\n                            down: startTouchY - TOUCH_DIRECTION_DETECT_OFFSET > currentClientY,\n                            left: startTouchX + TOUCH_DIRECTION_DETECT_OFFSET < currentClientX,\n                            right: startTouchX - TOUCH_DIRECTION_DETECT_OFFSET > currentClientX\n                        };\n                        var handle = function handle($el) {\n                            var skip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                            if ($el) {\n                                var parentScrollableEl = findParentBySelector($el, selector, false);\n                                if (elementIsInputRange($el)) {\n                                    return false;\n                                }\n                                if (skip || elementIsScrollableField($el) && findParentBySelector($el, selector) || elementHasSelector($el, selector)) {\n                                    var prevent = false;\n                                    if (elementScrollLeftOnStart($el) && elementScrollLeftOnEnd($el)) {\n                                        if (direction.up && elementScrollTopOnStart($el) || direction.down && elementScrollTopOnEnd($el)) {\n                                            prevent = true;\n                                        }\n                                    } else if (elementScrollTopOnStart($el) && elementScrollTopOnEnd($el)) {\n                                        if (direction.left && elementScrollLeftOnStart($el) || direction.right && elementScrollLeftOnEnd($el)) {\n                                            prevent = true;\n                                        }\n                                    } else if (directionWithOffset.up && elementScrollTopOnStart($el) || directionWithOffset.down && elementScrollTopOnEnd($el) || directionWithOffset.left && elementScrollLeftOnStart($el) || directionWithOffset.right && elementScrollLeftOnEnd($el)) {\n                                        prevent = true;\n                                    }\n                                    if (prevent) {\n                                        if (parentScrollableEl) {\n                                            handle(parentScrollableEl, true);\n                                        } else {\n                                            if (e.cancelable) {\n                                                e.preventDefault();\n                                            }\n                                        }\n                                    }\n                                } else {\n                                    handle(parentScrollableEl);\n                                }\n                            } else {\n                                if (e.cancelable) {\n                                    e.preventDefault();\n                                }\n                            }\n                        };\n                        handle(e.target);\n                    }\n                }\n            };\n            var onTouchEnd = function onTouchEnd(e) {\n                if (!state.scroll) {\n                    state.startTouchY = 0;\n                    state.startTouchX = 0;\n                }\n            };\n            if (false) {}\n            if (typeof document !== \"undefined\") {\n                document.addEventListener(\"touchstart\", onTouchStart);\n                document.addEventListener(\"touchmove\", scroll_lock_onTouchMove, {\n                    passive: false\n                });\n                document.addEventListener(\"touchend\", onTouchEnd);\n            }\n            var deprecatedMethods = {\n                hide: function hide(target) {\n                    throwError('\"hide\" is deprecated! Use \"disablePageScroll\" instead. \\n https://github.com/FL3NKEY/scroll-lock#disablepagescrollscrollabletarget');\n                    disablePageScroll(target);\n                },\n                show: function show(target) {\n                    throwError('\"show\" is deprecated! Use \"enablePageScroll\" instead. \\n https://github.com/FL3NKEY/scroll-lock#enablepagescrollscrollabletarget');\n                    enablePageScroll(target);\n                },\n                toggle: function toggle(target) {\n                    throwError('\"toggle\" is deprecated! Do not use it.');\n                    if (getScrollState()) {\n                        disablePageScroll();\n                    } else {\n                        enablePageScroll(target);\n                    }\n                },\n                getState: function getState() {\n                    throwError('\"getState\" is deprecated! Use \"getScrollState\" instead. \\n https://github.com/FL3NKEY/scroll-lock#getscrollstate');\n                    return getScrollState();\n                },\n                getWidth: function getWidth() {\n                    throwError('\"getWidth\" is deprecated! Use \"getPageScrollBarWidth\" instead. \\n https://github.com/FL3NKEY/scroll-lock#getpagescrollbarwidth');\n                    return getPageScrollBarWidth();\n                },\n                getCurrentWidth: function getCurrentWidth() {\n                    throwError('\"getCurrentWidth\" is deprecated! Use \"getCurrentPageScrollBarWidth\" instead. \\n https://github.com/FL3NKEY/scroll-lock#getcurrentpagescrollbarwidth');\n                    return getCurrentPageScrollBarWidth();\n                },\n                setScrollableTargets: function setScrollableTargets(target) {\n                    throwError('\"setScrollableTargets\" is deprecated! Use \"addScrollableTarget\" instead. \\n https://github.com/FL3NKEY/scroll-lock#addscrollabletargetscrollabletarget');\n                    scroll_lock_addScrollableTarget(target);\n                },\n                setFillGapSelectors: function setFillGapSelectors(selector) {\n                    throwError('\"setFillGapSelectors\" is deprecated! Use \"addFillGapSelector\" instead. \\n https://github.com/FL3NKEY/scroll-lock#addfillgapselectorfillgapselector');\n                    scroll_lock_addFillGapSelector(selector);\n                },\n                setFillGapTargets: function setFillGapTargets(target) {\n                    throwError('\"setFillGapTargets\" is deprecated! Use \"addFillGapTarget\" instead. \\n https://github.com/FL3NKEY/scroll-lock#addfillgaptargetfillgaptarget');\n                    scroll_lock_addFillGapTarget(target);\n                },\n                clearQueue: function clearQueue() {\n                    throwError('\"clearQueue\" is deprecated! Use \"clearQueueScrollLocks\" instead. \\n https://github.com/FL3NKEY/scroll-lock#clearqueuescrolllocks');\n                    clearQueueScrollLocks();\n                }\n            };\n            var scrollLock = _objectSpread({\n                disablePageScroll: disablePageScroll,\n                enablePageScroll: enablePageScroll,\n                getScrollState: getScrollState,\n                clearQueueScrollLocks: clearQueueScrollLocks,\n                getTargetScrollBarWidth: scroll_lock_getTargetScrollBarWidth,\n                getCurrentTargetScrollBarWidth: scroll_lock_getCurrentTargetScrollBarWidth,\n                getPageScrollBarWidth: getPageScrollBarWidth,\n                getCurrentPageScrollBarWidth: getCurrentPageScrollBarWidth,\n                addScrollableSelector: scroll_lock_addScrollableSelector,\n                removeScrollableSelector: scroll_lock_removeScrollableSelector,\n                addScrollableTarget: scroll_lock_addScrollableTarget,\n                removeScrollableTarget: scroll_lock_removeScrollableTarget,\n                addLockableSelector: scroll_lock_addLockableSelector,\n                addLockableTarget: scroll_lock_addLockableTarget,\n                addFillGapSelector: scroll_lock_addFillGapSelector,\n                removeFillGapSelector: scroll_lock_removeFillGapSelector,\n                addFillGapTarget: scroll_lock_addFillGapTarget,\n                removeFillGapTarget: scroll_lock_removeFillGapTarget,\n                setFillGapMethod: scroll_lock_setFillGapMethod,\n                refillGaps: refillGaps,\n                _state: state\n            }, deprecatedMethods);\n            /* harmony default export */ var scroll_lock = __nested_webpack_exports__[\"default\"] = scrollLock;\n        /***/ }\n    ])[\"default\"];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/scroll-lock/dist/scroll-lock.js\n");

/***/ })

};
;